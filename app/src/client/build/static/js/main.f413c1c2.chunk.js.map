{"version":3,"sources":["components/commons/Logo.js","components/commons/Navbar.js","components/auth/Signup.js","components/auth/RestaurantSignup.js","components/auth/Signin.js","components/auth/UserSignup.js","components/auth/AuthenticationHome.js","components/commons/AuthenticatedRoutes.js","components/restaurant/Restaurant.js","components/restaurant/outlet/Outlet.js","components/item/Item.js","components/item/ItemHome.js","components/restaurant/outlet/OutletHome.js","components/restaurant/RestaurantHome.js","components/user/UserHome.js","components/ContentArea.js","App.js","serviceWorker.js","index.js"],"names":["commons_Logo","props","react_default","a","createElement","className","alt","src","height","width","Navbar","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","logout","bind","assertThisInitialized","event","target","name","fetch","method","headers","Accept","Content-Type","then","result","status","window","location","alert","logoutButton","shouldShowLogout","onClick","children","Component","Signup","url","user_type","handleChange","handleSubmit","collectData","objectSpread","state","preventDefault","data","body","JSON","stringify","console","log","fieldChanged","changedValue","value","setState","prevState","defineProperty","isSignup","RestaurantSignup","contact","email","username","password","website","onSubmit","type","onChange","address","Signin","response","json","redirectTo","message","React","UserSignup","first_name","middle_name","last_name","dob","line1","line2","city","zipcode","AuthenticationForm","field","attributes","getElementsByTagName","form","SignUpType","auth_Signin","concat","checked","AuthenticatedRoutes","isLoggedIn","self","Restaurant","restaurant","outlets","match","params","id","updatedRestaurant","restaurantDetail","restaurantDetails","keys","length","Item","item","restaurantId","outletId","outlet_id","itemId","item_id","outlet","itemDetails","description","price","ItemHome","items","react_router_dom","basename","map","index","key","to","react_router","exact","path","component","OutletHome","lineOne","lineTwo","RestaurantHome","commons_Navbar","title","UserHome","content","queryString","require","App","LandingPage","rel","href","_ref","queryParameters","parse","search","auth_AuthenticationHome","Boolean","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f413c1c2.chunk.js","sourcesContent":["import React from 'react';\nimport \"../../styles/Logo.css\";\n\nexport default (props) => {\n    return (\n        <div className=\"Logo-icon\"><img alt=\"logo\" src=\"/logo.svg\" height=\"26px\" width=\"26px\" />&nbsp;lazy to cook</div>\n    );\n}","import React, {Component} from 'react';\nimport Logo from \"./Logo\";\nimport \"../../styles/Navbar.css\";\n\nclass Navbar extends Component {\n    constructor(props) {\n        super(props);\n        this.logout = this.logout.bind(this);\n    }\n\n    logout(event) {\n        if (event.target.name === \"logout\") {\n            fetch(\"/auth/logout\", {\n                method: 'GET',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                }\n            }).then(function (result) {\n                if (result.status === 200) {\n                    window.location = \"/app/\";\n                } else {\n                    alert(\"Error logging out.\");\n                }\n            })\n        }\n    }\n\n    render() {\n        const logoutButton = this.props.shouldShowLogout ? <button className=\"logout-btn\" name=\"logout\" onClick={this.logout}>Logout</button> : \"\";\n        return (\n            <div>\n                <nav className=\"Navbar-container\">\n                    <Logo />\n                    {logoutButton}\n                </nav>\n                {this.props.children}\n            </div>\n        );\n        \n    }\n}\nexport default Navbar;\n  ","import {Component} from 'react';\n\nclass Signup extends Component { \n    constructor(props) {\n        super(props);\n        this.url = \"/auth/register\";\n        this.user_type = \"\";\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.collectData = this.collectData.bind(this);\n    }\n\n    collectData() {\n        return {\n            ...this.state,\n            user_type : this.user_type\n        };\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const data = this.collectData();\n\n        if (data) {\n            fetch(this.url, {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data)\n            }).then(function (result) {\n                console.log(result);\n            })\n        }\n    }\n    \n    handleChange(event) {\n        const fieldChanged = event.target.name;\n        if (fieldChanged === \"isSignup\") {\n            this.setState((prevState)=>({\n                isSignup : !prevState.isSignup\n            }))\n            return;\n        }\n        const changedValue = event.target.value;\n        this.setState((prevState) => ({\n            [fieldChanged]: changedValue\n        }));\n      }\n}\nexport default Signup;","import React from 'react';\nimport Signup from './Signup';\nimport \"../../styles/auth/Form.css\";\n\nclass RestaurantSignup extends Signup { \n    constructor(props) {\n        super(props);\n        this.user_type = \"admin\";\n        this.state = {\n            name : \"\",\n            contact : \"\",\n            email : \"\",\n            username : \"\",\n            password : \"\",\n            website : \"\"\n        } \n    }\n\n    render() {\n        return (\n            <div>\n                <h4>Restaurant Sign up</h4>\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"field-row\">\n                        <label>\n                            Name\n                        </label>\n                        <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleChange} />\n                    </div>\n                    <div className=\"field-row\">\n                        <label>\n                            Phone Number\n                        </label>\n                        <input type=\"text\" name=\"contact\" value={this.state.address} onChange={this.handleChange} />\n                    </div>\n                    <div className=\"field-row\">\n                        <label>\n                            Email Address\n                        </label>\n                        <input type=\"text\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\n                    </div>\n                    <div className=\"field-row\">\n                        <label>\n                            Website\n                        </label>\n                        <input type=\"text\" name=\"website\" value={this.state.website} onChange={this.handleChange} />\n                    </div>\n                    <div className=\"field-row\">\n                        <label>\n                            Username\n                        </label>\n                        <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n                    </div>\n                    <div className=\"field-row\">\n                        <label>\n                            Password\n                        </label>\n                        <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                    </div>\n                    <input className=\"submit-btn\" type=\"submit\" value=\"Sign up\" />\n                </form>\n            </div>\n        );\n    }\n    \n}\nexport default RestaurantSignup;","import React from 'react';\nimport \"../../styles/auth/Form.css\";\n\nclass Signin extends React.Component {\n    constructor(props) {\n        super(props);\n        this.url = \"/auth/login\";\n        this.state = {\n            username : \"\",\n            password : \"\"\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.collectData = this.collectData.bind(this);\n    }\n\n    collectData() {\n        const user_type = this.props.user_type;\n        return {\n            ...this.state,\n            user_type : user_type\n        };\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const data = this.collectData();\n        if (data) {\n            fetch(this.url, {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data)\n            }).then(function (response) {\n                return response.json();\n            }).then(function(response) {\n                if (response.redirectTo) {\n                    window.location = response.redirectTo;\n                } else if (response.message) {\n                    alert(response.message);\n                }\n            });\n        }\n    }\n\n    handleChange(event) {\n        const fieldChanged = event.target.name;\n        if (fieldChanged === \"isSignup\") {\n            this.setState((prevState)=>({\n                isSignup : !prevState.isSignup\n            }))\n            return;\n        }\n        const changedValue = event.target.value;\n        this.setState((prevState) => ({\n            [fieldChanged]: changedValue\n        }));\n      }\n\n      render() {\n        return (\n            <div>\n                <h2>{(this.props.user_type === \"user\") ? \"User\" : \"Restaurant\"} Sign in </h2>\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"field-row\">\n                        <label>\n                            Username\n                        </label>\n                        <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n                    </div>  \n                    <div className=\"field-row\">\n                        <label>\n                            Password\n                        </label>\n                        <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                    </div> \n                    <input className=\"submit-btn\" type=\"submit\" value=\"Sign in\" /> \n                </form>\n            </div>\n        );\n      }\n}\n\nexport default Signin;","import React from 'react';\nimport Signup from './Signup';\nimport \"../../styles/auth/Form.css\";\n\nclass UserSignup extends Signup { \n    constructor(props) {\n        super(props);\n        this.user_type = \"user\"\n        this.state = {\n            first_name : \"\",\n            middle_name : \"\",\n            last_name : \"\",\n            dob : \"\", \n            email : \"\",\n            password : \"\",\n            line1 : \"\",\n            line2 : \"\",\n            city : \"\",\n            state : \"\",\n            zipcode : \"\"\n        };\n    }\n\n    collectData() {\n        return {\n            first_name : this.state.first_name,\n            middle_name : this.state.middle_name,\n            last_name : this.state.last_name,\n            dob : this.state.dob, \n            email : this.state.email,\n            password : this.state.password,\n            user_type : this.user_type,\n            address : {\n                line1 : this.state.line1,\n                line2 : this.state.line2,\n                city : this.state.city,\n                state : this.state.state,\n                zipcode : this.state.zipcode\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>User Sign up</h2>\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"field-row\">\n                        <label>\n                            First Name\n                        </label>\n                        <input type=\"text\" name=\"first_name\" value={this.state.first_name} onChange={this.handleChange} />\n                        <label>\n                            Middle Name\n                        </label>\n                        <input type=\"text\" name=\"middle_name\" value={this.state.middle_name} onChange={this.handleChange} />\n                    </div>  \n                    <div className=\"field-row\">\n                        <label>\n                            Last Name\n                        </label>\n                        <input type=\"text\" name=\"last_name\" value={this.state.last_name} onChange={this.handleChange} />\n                    </div>\n                    <div className=\"field-row\">\n                        <label>\n                            Date of Birth\n                        </label>\n                        <input type=\"text\" name=\"dob\" value={this.state.dob} onChange={this.handleChange} />\n                    </div>\n                    <div className=\"field-row\">\n                        <label>\n                            Email Address\n                        </label>\n                        <input type=\"text\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\n                    </div>\n                    <div className=\"field-row\">\n                        <label>\n                            Password\n                        </label>\n                        <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                    </div>\n                    <div>\n                        <h5>Mailing Address</h5>\n                        <div className=\"field-row\">\n                            <label>\n                                Line 1\n                            </label>\n                            <input type=\"text\" name=\"line1\" value={this.state.line1} onChange={this.handleChange} />\n                        </div>\n                        <div className=\"field-row\">\n                            <label>\n                                Line 2\n                            </label>\n                            <input type=\"text\" name=\"line2\" value={this.state.line2} onChange={this.handleChange} />\n                        </div>\n                        <div className=\"field-row\">\n                            <label>\n                                City\n                            </label>\n                            <input type=\"text\" name=\"city\" value={this.state.city} onChange={this.handleChange} />\n                        </div>\n                        <div className=\"field-row\">\n                            <label>\n                                State\n                            </label>\n                            <input type=\"text\" name=\"state\" value={this.state.state} onChange={this.handleChange} />\n                        </div>\n                        <div className=\"field-row\">\n                            <label>\n                                Zipcode\n                            </label>\n                            <input type=\"text\" name=\"zipcode\" value={this.state.zipcode} onChange={this.handleChange} />\n                        </div>\n                    </div>\n                    <input className=\"submit-btn\" type=\"submit\" value=\"Submit\" />\n                </form>\n            </div>\n        );\n    }\n    \n}\nexport default UserSignup;","import React, { Component } from 'react';\nimport RestaurantSignup from \"./RestaurantSignup\";\nimport Signin from \"./Signin\";\nimport UserSignup from './UserSignup';\nimport \"../../styles/auth/AuthenticationHome.css\";\n\nclass AuthenticationForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user_type: props.type,\n            isSignup : (props.method === \"signin\")\n        };\n        this.handleChange = this.handleChange.bind(this);\n      }\n\n      componentDidMount() {\n        fetch(\"/auth/login\", {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            }\n        }).then(function (result) {\n            return result.json();\n        }).then(function(result) {\n            if (result.redirectTo) {\n                window.location = result.redirectTo;\n            }\n        });\n      }\n\n      handleChange(event) {\n        const field = event.target;\n        const fieldChanged = field.attributes.name.value;\n        if (fieldChanged === \"isSignup\") {\n            this.setState((prevState)=>({\n                isSignup : !prevState.isSignup\n            }))\n            return;\n        }\n        const changedValue = field.getElementsByTagName(\"input\")[0].value;\n        this.setState({\n            [fieldChanged]: changedValue\n        });\n      }\n    \n      render() {\n        let form = \"\";\n        const SignUpType = (this.state.user_type === \"admin\") ? RestaurantSignup : UserSignup;\n        if (this.state.isSignup) {\n            form = <SignUpType />\n        } else {\n            form = <Signin user_type={this.state.user_type} />\n        }\n        return (\n            <div className=\"authentication-form\">\n                <div className=\"radio-selection usertype-selection\">\n                    <span name=\"user_type\" className={`${(this.state.user_type === \"admin\" ? \"selected\" : \"\")} selection left-border-curved`} onClick={this.handleChange}>\n                        <input type=\"hidden\" name=\"user_type\" value=\"admin\" checked={this.state.user_type === \"admin\"} /> Restaurant\n                    </span>\n                    <span name=\"user_type\" className={`${(this.state.user_type === \"user\" ? \"selected\" : \"\")} selection right-border-curved`} onClick={this.handleChange}>\n                        <input type=\"hidden\" name=\"user_type\" value=\"user\" checked={this.state.user_type === \"user\"} /> User\n                    </span>\n                </div>\n                <div className=\"radio-selection auth-type-selection\">\n                    <span name=\"isSignup\"  className={`${(this.state.isSignup ? \"selected\" : \"\")} selection left-border-curved`} onClick={this.handleChange}>\n                        <input type=\"hidden\" name=\"isSignup\" value=\"true\" checked={this.state.isSignup} /> Sign Up\n                    </span>\n                    <span name=\"isSignup\" className={`${(!this.state.isSignup ? \"selected\" : \"\")} selection right-border-curved`} onClick={this.handleChange}>\n                        <input type=\"hidden\" name=\"isSignup\" value=\"false\" checked={!this.state.isSignup} /> Sign In\n                    </span>\n                </div>\n                <div className=\"auth-form\">\n                {form}\n                </div>\n            </div>\n        );\n      }\n}\n\nexport default AuthenticationForm;","import {Component} from \"react\";\n\nclass AuthenticatedRoutes extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoggedIn : false\n        };\n    }\n\n    componentDidMount() {\n        const self = this;\n        fetch(\"/auth/login\", {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            }\n        }).then(function (result) {\n            return result.json();\n        }).then(function(result) {\n            self.setState({\n                isLoggedIn : result.status\n            })\n            if (!result.status) {\n                window.location = \"/app\";\n            }\n        });\n    }\n}\n\nexport default AuthenticatedRoutes;","import React from \"react\";\nimport \"../../styles/restaurant/Restaurant.css\";\nimport \"../../styles/auth/Form.css\";\n\nclass Restaurant extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            restaurant : {},\n            outlets : []\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        const field = event.target.name;\n        const value = event.target.value;\n        this.setState((prevState) => {\n            prevState.restaurant[field] = value;\n            return prevState;\n        });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const self = this;\n        fetch(`/api/restaurants/${this.props.match.params.id}`, {\n            method: 'PUT',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(this.state.restaurant)\n        }).then(function(response) {\n            if (!response || response.status !== 200) {\n                return null;\n            }\n            return response.json();\n        }).then(function(updatedRestaurant) {\n            self.setState({\n                restaurant : updatedRestaurant\n            });\n            alert(\"Successfully updated!\");\n        });\n    }\n\n    componentDidMount() {\n        const self = this;\n        fetch(`/api/restaurants/${this.props.match.params.id}`, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            }\n        }).then(function(response) {\n            if (!response || response.status !== 200) {\n                return null;\n            }\n            return response.json();\n        }).then(function(restaurantDetail) {\n            if (restaurantDetail) {\n                self.setState({\n                    restaurant : restaurantDetail\n                });\n            }\n        });\n    }\n    \n    render() {\n        let restaurantDetails = \"\";\n        if (this.state.restaurant && Object.keys(this.state.restaurant).length) {\n            restaurantDetails = (\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"field-row\">\n                        <label>\n                            Name\n                        </label>\n                        <input type=\"text\" name=\"name\" value={this.state.restaurant.name} onChange={this.handleChange} />\n                    </div>\n                    <div className=\"field-row\">\n                        <label>\n                            Phone Number\n                        </label>\n                        <input type=\"text\" name=\"contact\" value={this.state.restaurant.contact} onChange={this.handleChange} />\n                    </div>\n                    <div className=\"field-row\">\n                        <label>\n                            Email Address\n                        </label>\n                        <input type=\"text\" name=\"email\" value={this.state.restaurant.email} onChange={this.handleChange} />\n                    </div>\n                    <div className=\"field-row\">\n                        <label>\n                            Website\n                        </label>\n                        <input type=\"text\" name=\"email\" value={this.state.restaurant.website} onChange={this.handleChange} />\n                    </div>\n                    <input className=\"submit-btn\" type=\"submit\" value=\"Update\" />\n                </form>\n            );\n        }\n        return (\n            <div className=\"restaurant-detail-container\">\n                <h1>{this.state.restaurant.name}'s Profile</h1>\n                <section>{restaurantDetails}</section>\n            </div>\n        );\n    }\n}\n\nexport default Restaurant;","import React , {Component} from 'react';\n\nclass Outlet extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            outlet : {}\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        const self = this;\n        const restaurantId = this.props.match.params.id;\n        const outletId = this.props.match.params.outlet_id;\n        if (restaurantId && outletId) {\n            fetch(`/api/restaurants/${restaurantId}/outlets/${outletId}`, {\n                method: 'GET',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                }\n            }).then(function(response) {\n                if (response.status !== 200) {\n                    return null;\n                }\n                return response.json();\n            }).then(function(outlet) {\n                if (outlet) {\n                    self.setState((prevState) => {\n                        let newState = {\n                            outlet: {\n                                ...outlet,\n                                address : {\n                                    ...outlet.address,\n                                    line1 : outlet.address.lineOne,\n                                    line2 : outlet.address.lineTwo\n                                }\n                            }\n                        }\n                        delete newState.outlet.address.lineOne;\n                        return newState\n                    });\n                }\n            })\n        }\n    }\n\n    handleChange(event) {\n        const self = this;\n        console.log()\n        const field = event.target.name;\n        const value = event.target.value;\n        switch(field) {\n            case \"line1\":\n            case \"line2\":\n            case \"city\":\n            case \"state\":\n            case \"zipcode\":\n                self.setState((prevState) => {\n                    prevState.outlet.address[field] = value;\n                    return prevState;\n                });\n                break;\n            default:\n                self.setState((prevState) => {\n                    prevState.outlet[field] = value;\n                    return prevState;\n                });\n        }\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        console.log(this.state.outlet);\n    }\n\n    render() {\n        let outletDetails = \"\";\n        if (this.state.outlet && Object.keys(this.state.outlet).length) {\n            outletDetails = (\n                <form onSubmit={this.handleSubmit}>\n                    <div>\n                        <label>\n                            Name:\n                            <input type=\"text\" name=\"name\" value={this.state.outlet.name} onChange={this.handleChange} />\n                        </label>\n                    </div>\n                    <div>\n                        <label>\n                            Phone Number:\n                            <input type=\"text\" name=\"contact\" value={this.state.outlet.contact} onChange={this.handleChange} />\n                        </label>\n                    </div>\n                    <div>\n                        <h5>Mailing Address</h5>\n                        <div>\n                            <label>\n                                Line 1\n                                <input type=\"text\" name=\"line1\" value={this.state.outlet.address.line1} onChange={this.handleChange} />\n                            </label>\n                            <label>\n                                Line 2\n                                <input type=\"text\" name=\"line2\" value={this.state.outlet.address.line2} onChange={this.handleChange} />\n                            </label>\n                        </div>\n                        <div>\n                        <label>\n                                City\n                                <input type=\"text\" name=\"city\" value={this.state.outlet.address.city} onChange={this.handleChange} />\n                            </label>\n                        </div>\n                        <div>\n                            <label>\n                                State\n                                <input type=\"text\" name=\"state\" value={this.state.outlet.address.state} onChange={this.handleChange} />\n                            </label>\n                        </div>\n                        <div>\n                            <label>\n                                Zipcode\n                                <input type=\"text\" name=\"zipcode\" value={this.state.outlet.address.zipcode} onChange={this.handleChange} />\n                            </label>\n                        </div>\n                    </div>\n                    <input type=\"submit\" value=\"Update\" />\n                </form>\n            );\n        }\n        return (\n            <div>\n                <h1>Edit {this.state.outlet.name}</h1>\n                <section>{outletDetails}</section>\n            </div>\n        );\n    }\n}\n\nexport default Outlet;","import React , {Component} from 'react';\n\nclass Item extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            item : {}\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        const self = this;\n        const restaurantId = this.props.match.params.id;\n        const outletId = this.props.match.params.outlet_id;\n        const itemId = this.props.match.params.item_id;\n        if (restaurantId && outletId) {\n            fetch(`/api/restaurants/${restaurantId}/outlets/${outletId}/items/${itemId}`, {\n                method: 'GET',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                }\n            }).then(function(response) {\n                if (response.status !== 200) {\n                    return null;\n                }\n                return response.json();\n            }).then(function(item) {\n                if (item) {\n                    self.setState({\n                        item : item\n                    });\n                }\n            })\n        }\n    }\n\n    handleChange(event) {\n        const field = event.target.name;\n        const value = event.target.value;\n        this.setState((prevState) => {\n            prevState.outlet[field] = value;\n            return prevState;\n        });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        console.log(this.state.outlet);\n    }\n\n    render() {\n        let itemDetails = \"\";\n        if (this.state.item && Object.keys(this.state.item).length) {\n            itemDetails = (\n                <form onSubmit={this.handleSubmit}>\n                    <div>\n                        <label>\n                            Name:\n                            <input type=\"text\" name=\"name\" value={this.state.item.name} onChange={this.handleChange} />\n                        </label>\n                    </div>\n                    <div>\n                        <label>\n                            Description:\n                            <input type=\"text\" name=\"description\" value={this.state.item.description} onChange={this.handleChange} />\n                        </label>\n                    </div>\n                    <div>\n                        <label>\n                            Price:\n                            <input type=\"text\" name=\"price\" value={this.state.item.price} onChange={this.handleChange} />\n                        </label>\n                    </div>\n                    <input type=\"submit\" value=\"Update\" />\n                </form>\n            );\n        }\n        return (\n            <div>\n                <h1>Edit {this.state.item.name}</h1>\n                <section>{itemDetails}</section>\n            </div>\n        );\n    }\n}\n\nexport default Item;","import React from \"react\";\nimport AuthenticatedRoutes from \"../commons/AuthenticatedRoutes\";\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\nimport Item from \"./Item\";\nimport \"../../styles/item/ItemHome.css\";\n\nclass ItemHome extends AuthenticatedRoutes {\n    constructor(props) {\n        super(props);\n        this.state = {\n            items : []\n        }\n    }\n\n    componentDidMount() {\n        const self = this;\n        fetch(`/api/restaurants/${this.props.match.params.id}/outlets/${this.props.match.params.outlet_id}/items`, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            }\n        }).then(function(response) {\n            if (response.status !== 200) {\n                return null;\n            }\n            return response.json();\n        }).then(function(items) {\n            self.setState({\n                items : items\n            });\n        })\n    }\n\n    render() {\n        const self = this;\n        return (\n            <div className=\"item-list-tray\">   \n                <h4 className=\"item-title\">Items</h4>\n                <BrowserRouter basename=\"/app\">    \n                    <ul className=\"item-list\">\n                        {this.state.items.map(function(item, index) {\n                            return (\n                                <li className=\"item-list-item\" key={item.id} >\n                                    <Link to={`${self.props.match.url}/${item.id}`}>\n                                        <div>\n                                            <h3>{item.name}</h3>\n                                            <p className=\"item-list-item-description\">{item.description}</p>\n                                        </div>\n                                    </Link>\n                                </li>\n                            ); \n                        })}\n                    </ul>\n                    <Route exact path={`${this.props.match.path}/:item_id`} component={Item} />\n                </BrowserRouter>    \n            </div>\n        );\n    }\n  }\n\nexport default ItemHome;","import React from \"react\";\nimport AuthenticatedRoutes from \"../../commons/AuthenticatedRoutes\";\nimport Outlet from \"./Outlet\";\nimport ItemHome from \"../../item/ItemHome\";\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\nimport \"../../../styles/restaurant/outlet/OutletHome.css\";\n\nclass OutletHome extends AuthenticatedRoutes {\n    constructor(props) {\n        super(props);\n        this.state = {\n            outlets : []\n        }\n    }\n\n    componentDidMount() {\n        const self = this;\n        fetch(`/api/restaurants/${this.props.match.params.id}/outlets`, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            }\n        }).then(function(response) {\n            if (response.status !== 200) {\n                return null;\n            }\n            return response.json();\n        }).then(function(outlets) {\n            self.setState({\n                outlets : outlets\n            });\n        })\n    }\n\n    render() {\n        const self = this;\n        return (\n            <div className=\"outlet-list-tray\">   \n                <BrowserRouter basename=\"/app\">    \n                    <h4 className=\"outlet-title\">Outlets</h4>\n                    <ul className=\"outlet-list\">\n                        {this.state.outlets.map(function(outlet, index) {\n                            return (\n                                <li className=\"outlet-list-item\" key={outlet.id} >\n                                    <Link to={`${self.props.match.url}/${outlet.id}/items`}>\n                                        <h3>{outlet.name}</h3>\n                                        <span>{`${outlet.address.lineOne} ${outlet.address.lineTwo ? outlet.address.lineTwo : \"\"}, ${outlet.address.city}`}</span>\n                                    </Link>\n                                </li>\n                            ); \n                        })}\n                    </ul>\n                    <div>\n                        <Route path={`${this.props.match.path}/:outlet_id/items`} component={ItemHome} />\n                        {/* <Route exact path={`${this.props.match.path}/:outlet_id/edit`} component={Outlet} /> */}\n                        {/* <Route exact path={`${this.props.match.path}/:outlet_id/add`} component={Outlet} /> */}\n                    </div>\n                </BrowserRouter>    \n            </div>\n        );\n    }\n  }\n\nexport default OutletHome;","import React from \"react\";\nimport AuthenticatedRoutes from \"../commons/AuthenticatedRoutes\";\nimport Restaurant from \"./Restaurant\";\nimport OutletHome from \"./outlet/OutletHome\";\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\nimport Navbar from \"../commons/Navbar\";\nimport \"../../styles/restaurant/RestaurantHome.css\";\n\nclass RestaurantHome extends AuthenticatedRoutes {\n    constructor(props) {\n        super(props);\n        this.restaurantId = this.props.match.params.id;\n    }\n\n    render() {\n        if (this.state.isLoggedIn) {\n            return (\n                <div>\n                    <Navbar shouldShowLogout={this.state.isLoggedIn} />\n                    <div className=\"ContentArea-container\">\n                    <BrowserRouter basename=\"/app\">    \n                        <nav className=\"nav-tray\">\n                            <ul className=\"nav-tray-items\">\n                                <li className=\"nav-tray-item\">\n                                    <Link to={`${this.props.match.url}`} >\n                                        <i className=\"fas fa-user-circle nav-tray-item-icon\" title=\"Profile\"></i>\n                                        <div>Profile</div>\n                                    </Link>\n                                </li>\n                                <li className=\"nav-tray-item\">\n                                    <Link to={`${this.props.match.url}/outlets`}>\n                                    <i className=\"fas fa-utensils nav-tray-item-icon\"></i>\n                                        <div>Outlets</div>\n                                    </Link>\n                                </li>\n                            </ul>\n                        </nav>\n                        <div>\n                            <Route exact path={`${this.props.match.path}`} component={Restaurant} />\n                            <Route path={`${this.props.match.path}/outlets`} component={OutletHome} />\n                        </div>\n                    </BrowserRouter>\n                    </div>\n                </div>\n            )\n        } else {\n            return \"\";\n        }\n      \n    }\n  }\n\nexport default RestaurantHome;","import React from \"react\";\nimport AuthenticatedRoutes from \"../commons/AuthenticatedRoutes\";\nimport Navbar from \"../commons/Navbar\";\nimport ContentArea from \"../ContentArea\";\n\nclass UserHome extends AuthenticatedRoutes {\n    render() {\n        if (this.state.isLoggedIn) {\n            const content = <div>You're on user page of user id: {this.props.match.params.id}.</div>;\n            return (\n                <div>\n                <Navbar shouldShowLogout={this.state.isLoggedIn}></Navbar>\n                {content}\n                </div>\n            )\n        } else {\n            return \"\";\n        }\n    }\n}\n\nexport default UserHome;","import React, { Component } from 'react';\nimport \"../styles/ContentArea.css\";\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\n\nclass ContentArea extends Component {\n    render() {\n        console.log(this.props);\n        return (\n            <div className=\"ContentArea-container\">\n                <ul className=\"ContentArea-icon-tray\">\n                <BrowserRouter basename=\"/app\">\n                    <li><Link to=\"\">Info</Link></li>\n                    <li><Link to={`${this.props.match.url}/outlets`}>Outlets</Link></li>\n                    <div>\n                        <Route path=\"/outlets\" component={()=>{return \"outlet\";}} />\n                    </div>\n                </BrowserRouter>\n                    \n                </ul>\n                <div className=\"ContentArea-left-pane\"></div>\n                <div className=\"ContentArea-content-pane\">\n                    {this.props.content}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ContentArea;","import React, { Component } from 'react';\nimport Navbar from \"./components/commons/Navbar\";\nimport AuthenticationHome from \"./components/auth/AuthenticationHome\";\nimport RestaurantHome from \"./components/restaurant/RestaurantHome\";\nimport UserHome from \"./components/user/UserHome\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport './App.css';\n\nconst queryString = require('query-string');\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <BrowserRouter basename=\"/app\">\n          <div>\n            <Route exact path=\"/\" component={LandingPage} />\n            <Route path=\"/admin/:id\" component={RestaurantHome} />\n            <Route path=\"/user/:id\" component={UserHome} />\n          </div>\n        </BrowserRouter>\n        \n        <div className=\"footer\">\n          <div>App logo made by <a rel=\"noopener noreferrer\" href=\"https://www.flaticon.com/authors/baianat\" title=\"Baianat\">Baianat</a> from <a rel=\"noopener noreferrer\" href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a> is licensed by <a rel=\"noopener noreferrer\" href=\"http://creativecommons.org/licenses/by/3.0/\" title=\"Creative Commons BY 3.0\" target=\"_blank\">CC 3.0 BY</a></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst LandingPage = ({location}) => {\n  const queryParameters = queryString.parse(location.search);\n  console.log(queryParameters);\n  \n  return (\n    <div>\n      <Navbar isLoggedIn={false}></Navbar>\n      <AuthenticationHome \n        type={queryParameters.type ? queryParameters.type : \"admin\"} \n        method={queryParameters.method ? queryParameters.method : \"register\"} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}