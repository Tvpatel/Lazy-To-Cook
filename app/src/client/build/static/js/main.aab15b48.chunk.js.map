{"version":3,"sources":["components/Logo.js","components/Navbar.js","components/Signup.js","components/RestaurantSignup.js","components/Signin.js","components/UserSignup.js","components/AuthenticationForm.js","components/ContentArea.js","App.js","serviceWorker.js","index.js"],"names":["components_Logo","props","react_default","a","createElement","className","src","height","width","Navbar","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","children","Component","Signup","_this","url","user_type","handleChange","bind","assertThisInitialized","handleSubmit","collectData","objectSpread","state","event","preventDefault","data","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","then","result","console","log","fieldChanged","target","name","changedValue","value","setState","prevState","defineProperty","isSignup","RestaurantSignup","contact","email","username","password","onSubmit","type","onChange","address","Signin","React","UserSignup","first_name","middle_name","last_name","dob","line1","line2","city","zipcode","AuthenticationForm","form","components_RestaurantSignup","components_Signin","components_UserSignup","checked","ContentArea","content","App","react_router_dom","basename","components_Navbar","react_router","exact","path","component","LandingPage","Restaurant","href","title","components_AuthenticationForm","_ref","match","params","id","components_ContentArea","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aab15b48.chunk.js","sourcesContent":["import React from 'react';\nimport \"../styles/Logo.css\";\n\nexport default (props) => {\n    return (\n        <div className=\"Logo-icon\"><img src=\"/logo.svg\" height=\"26px\" width=\"26px\" />&nbsp;lazy to cook</div>\n    );\n}","import React, {Component} from 'react';\nimport Logo from \"./Logo\";\nimport \"../styles/Navbar.css\";\n\nclass Navbar extends Component {\n    constructor() {\n        super();\n    }\n    render() {\n        return (\n        <nav className=\"Navbar-container\">\n            <Logo />\n            {this.props.children}\n        </nav>\n        );\n        \n    }\n}\nexport default Navbar;\n  ","import React, {Component} from 'react';\n\nclass Signup extends Component { \n    constructor(props) {\n        super(props);\n        this.url = \"/auth/register\";\n        this.user_type = \"\";\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.collectData = this.collectData.bind(this);\n    }\n    \n    collectData() {\n        return {\n            ...this.state,\n            user_type : this.user_type\n        };\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const data = this.collectData();\n\n        if (data) {\n            fetch(this.url, {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data)\n            }).then(function (result) {\n                console.log(result);\n            })\n        }\n    }\n    \n    handleChange(event) {\n        const fieldChanged = event.target.name;\n        if (fieldChanged == \"isSignup\") {\n            this.setState((prevState)=>({\n                isSignup : !prevState.isSignup\n            }))\n            return;\n        }\n        const changedValue = event.target.value;\n        this.setState((prevState) => ({\n            [fieldChanged]: changedValue\n        }));\n      }\n}\nexport default Signup;","import React from 'react';\nimport Signup from './Signup';\n\nclass RestaurantSignup extends Signup { \n    constructor(props) {\n        super(props);\n        this.user_type = \"admin\";\n        this.state = {\n            name : \"\",\n            contact : \"\",\n            email : \"\",\n            username : \"\",\n            password : \"\"\n        } \n    }\n\n    render() {\n        return (\n            <div>\n                <h4>Restaurant Sign up</h4>\n                <form onSubmit={this.handleSubmit}>\n                    <div>\n                        <label>\n                            Name:\n                            <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleChange} />\n                        </label>\n                    </div>\n                    <div>\n                        <label>\n                            Phone Number:\n                            <input type=\"text\" name=\"contact\" value={this.state.address} onChange={this.handleChange} />\n                        </label>\n                    </div>\n                    <div>\n                        <label>\n                            Email Address:\n                            <input type=\"text\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\n                        </label>\n                    </div>\n                    <div>\n                        <label>\n                            Username:\n                            <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n                        </label>\n                    </div>\n                    <div>\n                        <label>\n                            Password:\n                            <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                        </label>\n                    </div>\n                    <input type=\"submit\" value=\"Sign up\" />\n                </form>\n            </div>\n        );\n    }\n    \n}\nexport default RestaurantSignup;","import React from 'react';\n\nclass Signin extends React.Component {\n    constructor(props) {\n        super(props);\n        this.url = \"/auth/login\";\n        this.user_type = props.user_type;\n        this.state = {\n            username : \"\",\n            password : \"\"\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.collectData = this.collectData.bind(this);\n    }\n\n    collectData() {\n        return {\n            ...this.state,\n            user_type : this.user_type\n        };\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const data = this.collectData();\n\n        if (data) {\n            fetch(this.url, {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data)\n            }).then(function (result) {\n                console.log(result);\n            })\n        }\n    }\n\n    handleChange(event) {\n        const fieldChanged = event.target.name;\n        if (fieldChanged == \"isSignup\") {\n            this.setState((prevState)=>({\n                isSignup : !prevState.isSignup\n            }))\n            return;\n        }\n        const changedValue = event.target.value;\n        this.setState((prevState) => ({\n            [fieldChanged]: changedValue\n        }));\n      }\n\n      render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <div>\n                    <label>\n                        Username:\n                        <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n                    </label>\n                </div>  \n                <div>\n                    <label>\n                        Password:\n                        <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                    </label>\n                </div> \n                <input type=\"submit\" value=\"Submit\" /> \n            </form>\n        );\n      }\n}\n\nexport default Signin;","import React from 'react';\nimport Signup from './Signup';\n\nclass UserSignup extends Signup { \n    constructor(props) {\n        super(props);\n        this.user_type = \"user\"\n        this.state = {\n            first_name : \"\",\n            middle_name : \"\",\n            last_name : \"\",\n            dob : \"\", \n            email : \"\",\n            password : \"\",\n            line1 : \"\",\n            line2 : \"\",\n            city : \"\",\n            state : \"\",\n            zipcode : \"\"\n        };\n    }\n\n    collectData() {\n        return {\n            first_name : this.state.first_name,\n            middle_name : this.state.middle_name,\n            last_name : this.state.last_name,\n            dob : this.state.dob, \n            email : this.state.email,\n            password : this.state.password,\n            user_type : this.user_type,\n            address : {\n                line1 : this.state.line1,\n                line2 : this.state.line2,\n                city : this.state.city,\n                state : this.state.state,\n                zipcode : this.state.zipcode\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <h4>User Sign up</h4>\n                <form onSubmit={this.handleSubmit}>\n                    <div>\n                        <label>\n                            First Name:\n                            <input type=\"text\" name=\"first_name\" value={this.state.first_name} onChange={this.handleChange} />\n                        </label>\n                        <label>\n                            Middle Name:\n                            <input type=\"text\" name=\"middle_name\" value={this.state.middle_name} onChange={this.handleChange} />\n                        </label>\n                        <label>\n                            Last Name:\n                            <input type=\"text\" name=\"last_name\" value={this.state.last_name} onChange={this.handleChange} />\n                        </label>\n                    </div>  \n                    <div>\n                        <label>\n                            Date of Birth:\n                            <input type=\"text\" name=\"dob\" value={this.state.dob} onChange={this.handleChange} />\n                        </label>\n                    </div>\n                    <div>\n                        <label>\n                            Email Address:\n                            <input type=\"text\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\n                        </label>\n                    </div>\n                    <div>\n                        <label>\n                            Password:\n                            <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                        </label>\n                    </div>\n                    <div>\n                        <h5>Mailing Address</h5>\n                        <label>\n                            Line 1\n                            <input type=\"text\" name=\"line1\" value={this.state.line1} onChange={this.handleChange} />\n                        </label>\n                        <label>\n                            Line 2\n                            <input type=\"text\" name=\"line2\" value={this.state.line2} onChange={this.handleChange} />\n                        </label>\n                    </div>\n                    <div>\n                    <label>\n                            City\n                            <input type=\"text\" name=\"city\" value={this.state.city} onChange={this.handleChange} />\n                        </label>\n                    </div>\n                    <div>\n                        <label>\n                            State\n                            <input type=\"text\" name=\"state\" value={this.state.state} onChange={this.handleChange} />\n                        </label>\n                    </div>\n                    <div>\n                        <label>\n                            Zipcode\n                            <input type=\"text\" name=\"zipcode\" value={this.state.zipcode} onChange={this.handleChange} />\n                        </label>\n                    </div>\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n            </div>\n        );\n    }\n    \n}\nexport default UserSignup;","import React, { Component } from 'react';\nimport RestaurantSignup from \"./RestaurantSignup\";\nimport Signin from \"./Signin\";\nimport UserSignup from './UserSignup';\n\n\nclass AuthenticationForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user_type: 'admin',\n            isSignup : true\n        };\n        this.handleChange = this.handleChange.bind(this);\n      }\n\n      handleChange(event) {\n        const fieldChanged = event.target.name;\n        if (fieldChanged == \"isSignup\") {\n            this.setState((prevState)=>({\n                isSignup : !prevState.isSignup\n            }))\n            return;\n        }\n        const changedValue = event.target.value;\n        this.setState((prevState) => ({\n            [fieldChanged]: changedValue\n        }));\n      }\n    \n      render() {\n        let form = \"\";\n        if (this.state.user_type == \"admin\") {\n            if (this.state.isSignup) {\n                form = <RestaurantSignup />;\n            } \n            else {\n                form = <Signin />;\n            }\n        } else if (this.state.user_type == \"user\"){\n            if (this.state.isSignup) {\n                form = <UserSignup />;\n            } else {\n                form = <Signin />;\n            }\n        }\n        return (\n            <div>\n                <div>\n                    <input type=\"radio\" name=\"user_type\" value=\"admin\" checked={this.state.user_type == \"admin\"} onChange={this.handleChange} /> Admin\n                    <input type=\"radio\" name=\"user_type\" value=\"user\" checked={this.state.user_type == \"user\"} onChange={this.handleChange} /> User\n                </div>\n                <div>\n                    <input type=\"radio\" name=\"isSignup\" value=\"true\" checked={this.state.isSignup} onChange={this.handleChange} /> Sign Up\n                    <input type=\"radio\" name=\"isSignup\" value=\"false\" checked={!this.state.isSignup} onChange={this.handleChange} /> Sign In\n                </div>\n                {form}\n            </div>\n        );\n      }\n}\n\nexport default AuthenticationForm;","import React, { Component } from 'react';\nimport \"../styles/ContentArea.css\";\n\nclass ContentArea extends Component {\n    render() {\n        return (\n            <div className=\"ContentArea-container\">\n                <div className=\"ContentArea-icon-tray\"></div>\n                <div className=\"ContentArea-left-pane\"></div>\n                <div className=\"ContentArea-content-pane\">\n                    {this.props.content}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ContentArea;","import React, { Component } from 'react';\nimport Navbar from \"./components/Navbar\";\nimport AuthenticationForm from \"./components/AuthenticationForm\";\nimport ContentArea from \"./components/ContentArea\";\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <BrowserRouter basename=\"/app\">\n          <Navbar></Navbar>\n          <div>\n            <Route exact path=\"/\" component={LandingPage} />\n            <Route path=\"/admin/:id\" component={Restaurant} />\n          </div>\n        </BrowserRouter>\n        \n        <div className=\"footer\">\n          <div>App logo made by <a href=\"https://www.flaticon.com/authors/baianat\" title=\"Baianat\">Baianat</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a> is licensed by <a href=\"http://creativecommons.org/licenses/by/3.0/\" title=\"Creative Commons BY 3.0\" target=\"_blank\">CC 3.0 BY</a></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst LandingPage = () => {\n  return (\n    <div>\n      <AuthenticationForm />\n    </div>\n  );\n}\nconst Restaurant = ({match}) => {\n  const content = <div>You're on restaurant admin page of restaurant {match.params.id}.</div>;\n  return (\n    <ContentArea content={content}/>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}